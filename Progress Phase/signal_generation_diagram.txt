# 🎨 تصحیح‌شده Signal Generation v2.0


## 📂 ساختار کامل پروژه

```
signal_generation/
│
├── 📄 __init__.py (99 lines)
├── 📄 README.md
│
├── 📄 context.py (161 lines)
│   └── AnalysisContext                     ← مرکز اشتراک داده
│
├── 📄 orchestrator.py (729 lines)
│   ├── OrchestratorStats                   ← آمار عملکرد
│   └── SignalOrchestrator                  ← مدیر اصلی pipeline
│
├── 📁 analyzers/ (11 فایل - 4,221 خط)
│   ├── 📄 __init__.py (27 lines)
│   ├── 📄 base_analyzer.py (88 lines)
│   │   └── BaseAnalyzer                    ← کلاس پایه (Abstract)
│   │
│   ├── 📄 trend_analyzer.py (480 lines)
│   │   └── TrendAnalyzer                   ← تحلیل روند 🔍
│   │
│   ├── 📄 momentum_analyzer.py (602 lines)
│   │   └── MomentumAnalyzer                ← MACD, RSI, Stochastic 📈
│   │
│   ├── 📄 volume_analyzer.py (504 lines)
│   │   └── VolumeAnalyzer                  ← حجم و OBV 📦
│   │
│   ├── 📄 pattern_analyzer.py (665 lines)
│   │   └── PatternAnalyzer                 ← الگوهای کندل 🎨
│   │
│   ├── 📄 sr_analyzer.py (598 lines)
│   │   └── SRAnalyzer                      ← حمایت/مقاومت 🎯
│   │
│   ├── 📄 volatility_analyzer.py (454 lines)
│   │   └── VolatilityAnalyzer              ← نوسانات 📊
│   │
│   ├── 📄 harmonic_analyzer.py (273 lines)
│   │   └── HarmonicAnalyzer                ← الگوهای هارمونیک 🎵
│   │
│   ├── 📄 channel_analyzer.py (134 lines)
│   │   └── ChannelAnalyzer                 ← کانال‌های قیمتی 📐
│   │
│   ├── 📄 cyclical_analyzer.py (156 lines)
│   │   └── CyclicalAnalyzer                ← الگوهای چرخه‌ای 🔄
│   │
│   └── 📄 htf_analyzer.py (267 lines)
│       └── HTFAnalyzer                     ← تایم‌فریم بالاتر 🔭
│
├── 📁 shared/ (2 فایل - 955 خط)
│   ├── 📄 __init__.py (9 lines)
│   │
│   ├── 📄 indicator_calculator.py (484 lines)
│   │   └── IndicatorCalculator             ← محاسبه اندیکاتورها ⚡
│   │
│   └── 📄 data_models.py (471 lines)
│       ├── SignalScore                     ← مدل امتیاز
│       ├── SignalInfo                      ← مدل سیگنال
│       └── TradeResult                     ← مدل نتیجه معامله
│
├── 📄 signal_score.py (231 lines)
│   └── SignalScore                         ← کلاس امتیاز
│
├── 📄 signal_scorer.py (579 lines)
│   └── SignalScorer                        ← محاسبه‌گر امتیاز نهایی
│
├── 📄 signal_info.py (275 lines)
│   ├── SignalInfo                          ← اطلاعات سیگنال
│   └── SignalRejection                     ← سیگنال رد شده
│
├── 📄 signal_validator.py (470 lines)
│   └── SignalValidator                     ← اعتبارسنجی سیگنال
│
├── 📁 systems/ (4 فایل - 1,360 خط)
│   ├── 📄 __init__.py (25 lines)
│   │
│   ├── 📄 adaptive_learning_system.py (424 lines)
│   │   ├── TradeResult
│   │   └── AdaptiveLearningSystem          ← یادگیری تطبیقی 🧠
│   │
│   ├── 📄 correlation_manager.py (333 lines)
│   │   └── CorrelationManager              ← مدیریت همبستگی 🔗
│   │
│   ├── 📄 emergency_circuit_breaker.py (276 lines)
│   │   └── EmergencyCircuitBreaker         ← مدار ایمنی 🚨
│   │
│   └── 📄 market_regime_detector.py (327 lines)
│       └── MarketRegimeDetector            ← تشخیص رژیم بازار 🎭
│
└── 📁 examples/ (2 فایل - 677 خط)
    ├── 📄 orchestrator_example.py (314 lines)
    │   ├── MockMarketDataFetcher
    │   └── MockIndicatorCalculator
    │
    └── 📄 phase4_integration_example.py (363 lines)
```

---

## 🔄 جریان کامل پردازش (Corrected Pipeline)

```
════════════════════════════════════════════════════════════════════
                    SIGNAL GENERATION PIPELINE v2.0
════════════════════════════════════════════════════════════════════

📥 INPUT
┌─────────────────────────────────────────┐
│ DataFrame (OHLCV)                       │
│ ─────────────────────────────────────── │
│ • 200-500 کندل                          │
│ • open, high, low, close, volume        │
└─────────────────────────────────────────┘
                    ↓
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ STEP 1: Context Initialization          ┃
┃ 📄 context.py                           ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
                    ↓
┌─────────────────────────────────────────┐
│ AnalysisContext.create()                │
│ ─────────────────────────────────────── │
│ symbol: 'BTCUSDT'                       │
│ timeframe: '1h'                         │
│ df: DataFrame (200 rows)                │
│ results: {} (خالی)                      │
└─────────────────────────────────────────┘
                    ↓
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ STEP 2: Indicator Calculation           ┃
┃ 📄 shared/indicator_calculator.py       ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
                    ↓
┌─────────────────────────────────────────┐
│ IndicatorCalculator.calculate_all()    │
│ ─────────────────────────────────────── │
│ محاسبه یکبار برای همیشه! ⚡            │
│                                          │
│ ✨ EMA (20, 50, 200)                    │
│ ✨ SMA (20, 50, 200)                    │
│ ✨ RSI (14)                              │
│ ✨ MACD (12, 26, 9)                     │
│ ✨ ATR (14)                              │
│ ✨ Bollinger Bands (20, 2)              │
│ ✨ Stochastic (14, 3, 3)                │
│ ✨ Volume SMA (20)                       │
│ ✨ OBV                                   │
│                                          │
│ → DataFrame enriched شد!                │
│ → context.df = enriched DataFrame       │
└─────────────────────────────────────────┘
                    ↓
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ STEP 3: Orchestrator Processing         ┃
┃ 📄 orchestrator.py                      ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
                    ↓
┌─────────────────────────────────────────┐
│ SignalOrchestrator.process(context)    │
│                                          │
│ مدیریت و هماهنگی تمام Analyzer ها      │
└─────────────────────────────────────────┘
                    ↓
    ┌───────────────────────────────────┐
    │   🔍 Analyzer Execution Phase     │
    │   (11 Analyzer به ترتیب)         │
    └───────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 1️⃣  TrendAnalyzer                        │
    │    📄 analyzers/trend_analyzer.py        │
    │    ────────────────────────────────────  │
    │    • تشخیص: direction, strength, phase  │
    │    • خروجی → context.add_result('trend')│
    └──────────────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 2️⃣  MomentumAnalyzer (Context-Aware!)   │
    │    📄 analyzers/momentum_analyzer.py     │
    │    ────────────────────────────────────  │
    │    • 🔑 می‌خواند: context.get('trend')  │
    │    • MACD, RSI, Stochastic, Divergence  │
    │    • خروجی → context.add_result()       │
    └──────────────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 3️⃣  VolumeAnalyzer (Context-Aware!)     │
    │    📄 analyzers/volume_analyzer.py       │
    │    ────────────────────────────────────  │
    │    • 🔑 می‌خواند: trend + momentum      │
    │    • Volume, OBV, تایید حجمی           │
    │    • خروجی → context.add_result()       │
    └──────────────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 4️⃣  PatternAnalyzer                      │
    │    📄 analyzers/pattern_analyzer.py      │
    │    ────────────────────────────────────  │
    │    • 60+ الگوی کندل‌استیک              │
    │    • Hammer, Engulfing, Doji...         │
    │    • خروجی → context.add_result()       │
    └──────────────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 5️⃣  SRAnalyzer                           │
    │    📄 analyzers/sr_analyzer.py           │
    │    ────────────────────────────────────  │
    │    • حمایت و مقاومت                     │
    │    • Breakout & Breakdown               │
    │    • خروجی → context.add_result()       │
    └──────────────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 6️⃣  VolatilityAnalyzer                   │
    │    📄 analyzers/volatility_analyzer.py   │
    │    ────────────────────────────────────  │
    │    • ATR, Bollinger Bands               │
    │    • نوسانات بازار                      │
    │    • خروجی → context.add_result()       │
    └──────────────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 7️⃣  HarmonicAnalyzer                     │
    │    📄 analyzers/harmonic_analyzer.py     │
    │    ────────────────────────────────────  │
    │    • Gartley, Butterfly, Bat            │
    │    • الگوهای هارمونیک                   │
    │    • خروجی → context.add_result()       │
    └──────────────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 8️⃣  ChannelAnalyzer                      │
    │    📄 analyzers/channel_analyzer.py      │
    │    ────────────────────────────────────  │
    │    • کانال‌های قیمتی                    │
    │    • خروجی → context.add_result()       │
    └──────────────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 9️⃣  CyclicalAnalyzer                     │
    │    📄 analyzers/cyclical_analyzer.py     │
    │    ────────────────────────────────────  │
    │    • الگوهای چرخه‌ای                    │
    │    • خروجی → context.add_result()       │
    └──────────────────────────────────────────┘
                    ↓
    ┌──────────────────────────────────────────┐
    │ 🔟  HTFAnalyzer                          │
    │    📄 analyzers/htf_analyzer.py          │
    │    ────────────────────────────────────  │
    │    • تحلیل تایم‌فریم بالاتر             │
    │    • خروجی → context.add_result()       │
    └──────────────────────────────────────────┘
                    ↓
┌─────────────────────────────────────────┐
│ Context بعد از Analyzer ها:            │
│ ─────────────────────────────────────── │
│ results = {                              │
│   'trend': {...},                        │
│   'momentum': {...},                     │
│   'volume': {...},                       │
│   'patterns': {...},                     │
│   'sr_levels': {...},                    │
│   'volatility': {...},                   │
│   'harmonic': {...},                     │
│   'channels': {...},                     │
│   'cyclical': {...},                     │
│   'htf': {...}                           │
│ }                                        │
└─────────────────────────────────────────┘
                    ↓
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ STEP 4: Signal Scoring                  ┃
┃ 📄 signal_scorer.py                     ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
                    ↓
┌─────────────────────────────────────────┐
│ SignalScorer.calculate_score(context)  │
│ ─────────────────────────────────────── │
│                                          │
│ Base Score = (                           │
│   trend × 0.30 +                         │
│   momentum × 0.25 +                      │
│   volume × 0.15 +                        │
│   patterns × 0.10 +                      │
│   sr_levels × 0.10 +                     │
│   htf × 0.10                             │
│ )                                        │
│                                          │
│ Modifiers:                               │
│ × Volume Confirmation Bonus (1.2)       │
│ × Trend Alignment Factor (1.3)          │
│ × Timeframe Weight (1.0)                │
│                                          │
│ Final Score = min(adjusted, 100)        │
│                                          │
│ مثال: Score = 85/100 ✨                 │
└─────────────────────────────────────────┘
                    ↓
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ STEP 5: Signal Validation               ┃
┃ 📄 signal_validator.py                  ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
                    ↓
┌─────────────────────────────────────────┐
│ SignalValidator.validate()              │
│ ─────────────────────────────────────── │
│                                          │
│ ✅ Score >= 60? (85 >= 60) → Pass       │
│ ✅ R/R >= 2? (1:3 >= 1:2) → Pass        │
│                                          │
│ 🚨 Circuit Breaker Check:               │
│    📄 systems/emergency_circuit...      │
│    → OK ✅                               │
│                                          │
│ 🔗 Correlation Check:                   │
│    📄 systems/correlation_manager       │
│    → OK ✅                               │
│                                          │
│ 🎭 Market Regime Check:                 │
│    📄 systems/market_regime_detector    │
│    → Trending ✅                         │
│                                          │
│ 📊 Portfolio Exposure Check:            │
│    → OK ✅                               │
│                                          │
│ 🧠 Adaptive Learning Input:             │
│    📄 systems/adaptive_learning...      │
│    → Historical pattern: Good ✅        │
│                                          │
│ نتیجه: ✅ APPROVED                      │
└─────────────────────────────────────────┘
                    ↓
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ STEP 6: Signal Construction             ┃
┃ 📄 signal_info.py                       ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
                    ↓
┌─────────────────────────────────────────┐
│ SignalInfo (شیء نهایی)                 │
│ ─────────────────────────────────────── │
│ symbol: 'BTCUSDT'                       │
│ direction: 'LONG'                        │
│ entry_price: 67500.0                     │
│ stop_loss: 66800.0                       │
│ take_profit: 69200.0                     │
│ score: 85.0                              │
│ confidence: 0.89                         │
│ risk_reward: 2.43                        │
│ timeframe: '1h'                          │
│ analysis_data: {context.results}        │
└─────────────────────────────────────────┘
                    ↓
📤 OUTPUT
┌─────────────────────────────────────────┐
│ SignalInfo (Ready for TradeManager!)   │
│                                          │
│ ✅ آماده برای ارسال به TradeManager    │
│ ✅ تمام اطلاعات تحلیل موجود است         │
│ ✅ اعتبارسنجی کامل انجام شده            │
└─────────────────────────────────────────┘

════════════════════════════════════════════════════════════════════
```

